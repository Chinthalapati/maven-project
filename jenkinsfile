pipeline {
    agent any 
    tools {
	maven 'localMaven'
	}    
    stages {
        stage('Build Package') {
            steps {
                echo 'Build phase!'
		sh 'mvn -B -DskipTests clean install'
            }
        }
        stage('Test') {
                failFast true
                parallel {
            
                stage('Unit Test') {
                        steps {
                        echo 'Unit Test!!!'
			sh 'mvn test'
                        }
                    }
                stage('Integration Tests!') {
                        steps {
                            echo 'Integration Tests!!!'
                        }
                }
            }
        }
        stage('Static Analysis'){
                steps {
                    echo 'Static Analysis'
		    sh 'mvn checkstyle:checkstyle'
                }
            }
        stage('Deploy to Artifactory'){
                steps {
                    echo 'Deploy to Artifactory'
		    sh 'mvn deploy'
                }
            }
        stage('Deploy - REL'){
                when {
                    expression {
                        params.DEPLOY_TO_REL == true
                    }
                }
                steps {
                    echo 'Deployment to REL environment!'
                }
        }
        stage('Deploy - FST'){
                when {
		     branch 'master'
                }
                steps {
                        timeout(time:5, unit:'MINUTES') {
                        input message:'Approve FST Deployment?'
                        }
                        echo 'Deployment to FST environment!'
                }
        }
        stage('Deploy - IST'){
                when {
		     branch 'master'
                }
                steps {
                        timeout(time:5, unit:'MINUTES') {
                        input message:'Approve IST Deployment?'
                        }
                        echo 'Deployment to IST environment!'
                }
        }
        stage('Deploy - PRE_PROD'){
                when {
		     branch 'master'
                }
                steps {
                        timeout(time:5, unit:'MINUTES') {
                        input message:'Approve PRE_PROD Deployment?'
                        }
                        echo 'Deployment to PRE_PROD environment!'
                }
        }
        stage('Deploy - PROD'){
                when {
		     branch 'master'
                }
                steps {
                        timeout(time:5, unit:'MINUTES') {
                        input message:'Approve PRD Deployment?'
                        }
                        echo 'Deployment to PRD environment!'
                }
        }
	stage('Tag git repo'){
		when {
			branch 'master'
		}
		steps {
		    sh 'mvn deploy scm:tag -Drevision=$BUILD_TAG'
		}
	}
    }
    post {
        failure {
                updateGitlabCommitStatus name: 'build', state: 'failed'
            }
        success {
                updateGitlabCommitStatus name: 'build', state: 'success'
            }
        always {
                archive '**/target/**/*'
                junit(allowEmptyResults: true, testResults: '**/target/surefire-reports/*.xml')
            }
        }
        parameters {
            booleanParam(name: 'DEPLOY_TO_REL', defaultValue:false, description: 'Tick this box to deploy the build artefacts to REL Environment')
        }
        triggers {
            gitlab(triggerOnPush:true, triggerOnMergeRequest:true, branchFilterType:'All')
        }
        options {
            gitLabConnection('GitLab')
            buildDiscarder(logRotator(numToKeepStr: '5'))
	    timestamps()
        }
    }
